from config import tp_presets, client_map

def convert_relative_to_absolute(relatives):
    absolutes = []
    remaining = 1.0
    for r in relatives:
        part = round(remaining * r, 6)
        absolutes.append(part)
        remaining -= part
    return absolutes

def main():
    # ===== –í—ã–±–æ—Ä –±–∏—Ä–∂–∏ =====
    print("–í—ã–±–µ—Ä–∏ –±–∏—Ä–∂—É:")
    for i, name in enumerate(client_map.keys(), start=1):
        print(f"{i}. {name.capitalize()}")

    try:
        exchange_names = list(client_map.keys())
        raw_input = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–∏—Ä–∂–∏: ")
        choice = int(raw_input)
        if choice < 1 or choice > len(exchange_names):
            print(f"DEBUG: Invalid choice: {choice} (out of range)")
            raise IndexError("Choice out of range")
        
        selected_exchange = exchange_names[choice - 1]
        ClientClass = client_map[selected_exchange]
        client = ClientClass()
        print(f"\n‚úÖ –ë–∏—Ä–∂–∞ –≤—ã–±—Ä–∞–Ω–∞: {selected_exchange}")
        
    except ValueError:
        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥: –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ. Raw input was: '{raw_input}'")
    except IndexError:
        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –±–∏—Ä–∂–∏: –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(exchange_names)}.")
    except KeyError:
        print(f"‚ùå –û—à–∏–±–∫–∞: –±–∏—Ä–∂–∞ '{selected_exchange}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ client_map.")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

    # ===== –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ =====
    symbol = input("Symbol (e.g. BTCUSDT): ").strip().upper()
    side = input("Side (Long/Short): ").capitalize()
    leverage = int(input("Leverage (e.g. 10): "))
    margin_usd = float(input("Margin USD (e.g. 100): "))

    # ===== –í—ã–±–æ—Ä TP –ø—Ä–µ—Å–µ—Ç–∞ =====
    print("\n–í—ã–±–µ—Ä–∏ TP –ø—Ä–µ—Å–µ—Ç:\n")
    for i, preset in enumerate(tp_presets):
        print(f"{i + 1}. {preset['name']}")

    preset_choice = int(input("\n–¢–≤–æ–π –≤—ã–±–æ—Ä: ")) - 1
    preset = tp_presets[preset_choice]
    tp_relative = preset["take_percents"]

    tp_percents = convert_relative_to_absolute(tp_relative) if sum(tp_relative) > 1.01 else tp_relative

    # ===== –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –≤–≤–æ–¥ TP =====
    try:
        price = client.get_price(symbol)
        print(f"\nüìà –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ {symbol}: {price:.2f}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω—ã: {e}")
        return

    tp_prices = []
    print("\n–í–≤–µ–¥–∏ —Ü–µ–Ω—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞:")
    for i, percent in enumerate(tp_percents):
        try:
            tp_price = float(input(f"  TP {i + 1} (–¥–æ–ª—è {percent * 100:.1f}%): "))
            tp_prices.append(tp_price)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω—ã.")
            return

    # ===== Stop Loss =====
    try:
        sl_price = float(input("SL price: "))
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ SL.")
        return

    # ===== –†–∞–∑–º–µ—â–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞ =====
    print(f"\nüõí –†–∞–∑–º–µ—â–∞–µ–º –æ—Ä–¥–µ—Ä:")
    print(f" - TP –ø—Ä–æ—Ü–µ–Ω—Ç—ã: {tp_percents}")
    print(f" - TP —Ü–µ–Ω—ã:     {tp_prices}")
    print(f" - SL —Ü–µ–Ω–∞:     {sl_price}\n")

    try:
        result = client.place_order(
            symbol=symbol,
            side=side,
            leverage=leverage,
            margin_usd=margin_usd,
            tp_prices=tp_prices,
            tp_percents=tp_percents,
            sl_price=sl_price
        )

        print(f"\n‚úÖ –û—Ä–¥–µ—Ä —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â—ë–Ω! TP –æ—Ä–¥–µ—Ä–æ–≤: {result['tp_orders']}")

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏ –æ—Ä–¥–µ—Ä–∞: {e}")


if __name__ == "__main__":
    while True:
        main()
        again = input("\n‚û°Ô∏è  –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –æ—Ä–¥–µ—Ä? (y/N): ").lower()
        if again != "y":
            print("üëã –í—ã—Ö–æ–¥.")
            break

